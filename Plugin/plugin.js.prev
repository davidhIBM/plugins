var request = require('request');

function Receiver(srv, rp, memos_cb) {
	var me = this;	
	var firstMemo = 0;
	var url = srv+'/v1/RP/'+rp;
	this.maxMemos = 128;
	this.maxDelay = 300000;
	
	this.start = function() {
		me.stopped = false;
		function once() {
			if (!me.stopped) {
				me._get(once);
			}			
		}
		once();
	}
	
	this.stop = function() {
		me.stopped = true;
	}
	
	this._get = function (complete) {
		var req = {
			      url: url 
			    , method: 'GET'
			    , json: true
			    , headers: { 
			         'Content-Type': 'application/json'
			       , 'X-First': me.firstMemo
			       , 'X-Last':  me.firstMemo + me.maxMemos - 1
			       , 'X-Delay': me.maxDelay
			      }
			}
		request(req, function (error, resp, memo) {
			if (!error && resp.statusCode == 200) {
				var next = parseInt(resp.headers['x-next']);
				if (!isNaN(next)) {
		        	me.firstMemo = next;
		        }
		        if (memos_cb) memos_cb(memo);
		        //console.log(memo);
		        complete();		        
		    } else {
		    	if (error) console.log(error);
		    	else console.log(resp.statusCode);
		    	setTimeout(complete, 30000);
		    }
		});
	}

} 

function Emitter(srv, rp) {
	var url = srv+'/v1/RP/'+rp;
	this.memo = function (obj) {
		var req = {
			      url: url 
			    , method: 'PUT'
			    , json: obj
			    , headers: { 
			        	   'Content-Type': 'application/json'
			      }				
			}
		request(req, function (error, resp, body) {
			if (error || resp.statusCode !== 200) {
		    	if (error) console.log(error);
		    	else console.log(resp.statusCode);
		    	return;
		    }
	    	//console.log('Emitter success'); 
		});
	}
}


module.exports = {
			  Emitter:Emitter
			, Receiver:Receiver
		};


